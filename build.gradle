buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
    ivy {
        name "MineTweaker3"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module]-([classifier]-)[revision].[ext]"
    }
}

apply plugin: 'forge'

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mc_version + "-" + config.mod_version + "-" + config.build_number
group= config.package_group
archivesBaseName = config.mod_name

minecraft {
    version = config.mc_version + "-" + config.forge_version
    runDir = "eclipse"
}

dependencies {
    compile name: "NotEnoughItems"    , group: "codechicken", version: config.mc_version + "-" + config.nei_version, classifier: "dev"
    runtime name: "CodeChickenLib"    , group: "codechicken", version: config.mc_version + "-" + config.ccl_version, classifier: "dev"
    runtime name: "CodeChickenCore"   , group: "codechicken", version: config.mc_version + "-" + config.ccc_version, classifier: "dev"
    compile name: "MineTweaker3"      , group: "minetweaker", version: config.mc_version + "-" + config.minetweaker_version, classifier: "Dev"
    

    compile "tconstruct:TConstruct:" + config.mc_version + "-" + config.tconstruct_version + ":deobf"
    compile "mantle:Mantle:" + config.mc_version + "-" + config.mantle_version + ":deobf"

    compile fileTree(dir: 'lib', include: '*.jar')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

deobfJar.dependsOn classes
assemble.dependsOn deobfJar
